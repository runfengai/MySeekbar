package com.jarry.myseekbar;import android.content.Context;import android.graphics.Canvas;import android.graphics.Paint;import android.os.Build;import android.support.annotation.RequiresApi;import android.util.AttributeSet;import android.util.Log;import android.view.MotionEvent;import android.widget.SeekBar;/** * Created by Administrator on 2017/2/4 0004. */public class MySeekBar1 extends SeekBar {    static final String TAG = "MySeekBar";    Paint paint = new Paint();    int width = 0, height = 0;    int raRatio = 200;    int radius = 300, radiusSmall = 300 - raRatio;    public MySeekBar1(Context context) {        super(context);        init(context);    }    public MySeekBar1(Context context, AttributeSet attrs) {        super(context, attrs);        init(context);    }    public MySeekBar1(Context context, AttributeSet attrs, int defStyleAttr) {        super(context, attrs, defStyleAttr);        init(context);    }    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)    public MySeekBar1(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {        super(context, attrs, defStyleAttr, defStyleRes);        init(context);    }    protected void onSizeChanged(int w, int h, int oldw, int oldh) {        super.onSizeChanged(h, w, oldh, oldw);    }    @Override    protected synchronized void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {        super.onMeasure(widthMeasureSpec, heightMeasureSpec);        width = getMeasuredWidth();        height = getMeasuredHeight();        radius = width / 3;        radiusSmall = radius - raRatio;        setMeasuredDimension(width, height);    }    private void init(Context context) {        paint = new Paint();        paint.setAntiAlias(true);// 去除锯齿效果        paint.setDither(true);// 防抖动，会使绘制出来的图片颜色更加平滑和饱满，图像更加清晰    }    @Override    protected synchronized void onDraw(Canvas canvas) {        canvas.rotate(-90);        canvas.translate(-width, 0);        super.onDraw(canvas);    }    @Override    public boolean onTouchEvent(MotionEvent event) {        if (!isEnabled()) {            return false;        }        switch (event.getAction()) {            case MotionEvent.ACTION_DOWN:            case MotionEvent.ACTION_MOVE:            case MotionEvent.ACTION_UP:                int i = 0;                i = getMax() - (int) (getMax() * event.getY() / getHeight());                setProgress(i);                Log.i("Progress", getProgress() + "");                onSizeChanged(getWidth(), getHeight(), 0, 0);                break;            case MotionEvent.ACTION_CANCEL:                break;        }        return true;    }}